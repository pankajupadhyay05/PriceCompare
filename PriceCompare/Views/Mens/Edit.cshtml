@model PriceCompare.Models.men

@{
    ViewBag.Title = "Manage Application Article - Add News Template";
}

<script src="@Url.Content("~/Scripts/jquery-1.5.1.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div class="contentHolder">
    @using (Html.BeginForm()) {
        @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)
            <div class="adminHeading">Edit-Delete Mens Clothing Template</div>
            <div class="adminControls">
                <input type="submit" class="button" value="Save and Exit" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "button" })
                @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { onclick = "return confirm('Are you sure you wish to delete this article?');", @class = "button" })
            </div>
            <table width="99%" class="template">
                <tr>
                    <td class="editor-label">
                        @Html.LabelFor(model => model.Name)
                    </td>
                    <td class="editor-field">
                        @Html.EditorFor(model => model.Name)
                        @Html.ValidationMessageFor(model => model.Name)
                    </td>
                </tr>
                <tr></tr><tr></tr><tr></tr><tr></tr><tr></tr>
                <tr>
                    <td class="editor-label">
                        @Html.LabelFor(model => model.ClothingBrandId, "Brand")
                    </td>
                    <td class="editor-field">
                        @Html.DropDownListFor(model => model.ClothingBrandId, (IEnumerable<SelectListItem>)ViewBag.BrandList, "[None]")
                        @Html.ValidationMessageFor(model => model.ClothingBrandId)
                    </td>
                </tr>
                <tr></tr><tr></tr><tr></tr><tr></tr><tr></tr>
                <tr>
                    <td class="editor-label">
                        @Html.LabelFor(model => model.Type)
                    </td>
                    <td class="editor-field">
                        @Html.DropDownListFor(model => model.Type, new SelectList(new List<Object>{ 
                                                                                    new { value = "casual-shirts" , text = "Casual Shirts"  },
                                                                                    new { value = "formal-shirts" , text = "Formal Shirts" },
                                                                                    new { value = "round-neck-tshirts" , text = "Round Neck T-Shirts" },
                                                                                    new { value = "polo-tshirts" , text = "Polo T-Shirts" },
                                                                                    new { value = "v-neck-tshirts" , text = "V Neck T-Shirts" },
                                                                                    new { value = "jackets" , text = "Jackets" },
                                                                                    new { value = "blazers" , text = "Blazers" },
                                                                                    new { value = "sweatshirts" , text = "SweatShirts" },
                                                                                    new { value = "jeans" , text = "All type Jeans" },
                                                                                    new { value = "trousers" , text = "Trousers" }
                                                                                    },
                                                                                    "value",
                                                                                    "text",
                                                                                    Model.Type))
                        @Html.ValidationMessageFor(model => model.Type)
                    </td>
                </tr>
                <tr></tr><tr></tr><tr></tr><tr></tr><tr></tr>
                <tr>
                    <td class="editor-label">
                        @Html.LabelFor(model => model.Price)
                    </td>
                    <td class="editor-field">
                        @Html.EditorFor(model => model.Price)
                        @Html.ValidationMessageFor(model => model.Price)
                    </td>
                </tr>
                <tr></tr><tr></tr><tr></tr><tr></tr><tr></tr>
                <tr>
                    <td class="editor-label">
                        ProductImage URL1
                    </td>
                    <td class="editor-field">
                        @Html.EditorFor(model => model.Picture1)
                        @Html.ValidationMessageFor(model => model.Picture1)
                    </td>
                </tr>
                <tr></tr><tr></tr><tr></tr><tr></tr><tr></tr>
                <tr>
                    <td class="editor-label">
                        ProductImage URL2
                    </td>
                    <td class="editor-field">
                        @Html.EditorFor(model => model.Picture2)
                        @Html.ValidationMessageFor(model => model.Picture2)
                    </td>
                </tr>
                <tr></tr><tr></tr><tr></tr><tr></tr><tr></tr>
                <tr>
                    <td class="editor-label">
                        @Html.LabelFor(model => model.Instock)
                    </td>
                    <td class="editor-field">
                        @Html.DropDownListFor(model => model.Instock, new SelectList(new List<Object>{ 
                                                                                    new { value = "yes" , text = "YES"  },
                                                                                    new { value = "no" , text = "NO"}
                                                                                    },
                                                                                    "value",
                                                                                    "text",
                                                                                    Model.Instock))
                        @Html.ValidationMessageFor(model => model.Instock)
                    </td>
                </tr>
                <tr></tr><tr></tr><tr></tr><tr></tr><tr></tr>
                <tr>
                    <td class="editor-label">
                        @Html.LabelFor(model => model.FetchUrl)
                    </td>
                    <td class="editor-field">
                        @Html.EditorFor(model => model.FetchUrl)
                        @Html.ValidationMessageFor(model => model.FetchUrl)
                    </td>
                </tr>
                <tr></tr><tr></tr><tr></tr><tr></tr><tr></tr>
                <tr>
                    <td class="editor-label">
                        @Html.LabelFor(model => model.Description)
                    </td>
                    <td class="editor-field">
                        @Html.EditorFor(model => model.Description)
                        @Html.ValidationMessageFor(model => model.Description)
                    </td>
                </tr>
                <tr></tr><tr></tr><tr></tr><tr></tr><tr></tr>
                <tr>
                    <td class="editor-label">
                        @Html.LabelFor(model => model.RetailerId, "Retailer")
                    </td>
                    <td class="editor-field">
                        @Html.DropDownListFor(model => model.RetailerId, (IEnumerable<SelectListItem>)ViewBag.RetailerList, "---Choose Retailer---")
                        @Html.ValidationMessageFor(model => model.RetailerId)
                    </td>
                </tr>
                <tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr><tr></tr>
            </table>
    }
    <br />
</div>